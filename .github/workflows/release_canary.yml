name: Canary Release
on:
  push:
    branches-ignore:
      - 'main'
      - 'next-major'
      - 'changeset-release/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    concurrency:
      group: npm-canary
      cancel-in-progress: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 22
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --if-present
      - name: Create .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}
      - name: Publish canary release
        run: |
          if [[ -f '.changeset/pre.json' ]]; then
            npx changeset pre exit
          fi

          echo -e "---\n$( jq .name packages/react/package.json ): patch\n---\n\nFake entry to force publishing" > .changeset/force-snapshot-release.md
          npx changeset version --snapshot
          npx changeset publish --tag canary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Output canary version
        uses: actions/github-script@a3e7071a34d7e1f219a8a4de9a5e0a34d1ee1293
        with:
          script: |
            const package = require(`${process.env.GITHUB_WORKSPACE}/packages/react/package.json`)
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              context: `Published ${package.name}`,
              description: package.version,
              target_url: `https://unpkg.com/${package.name}@${package.version}/`
            })
      - name: Write workspace versions as JSON file
        uses: actions/github-script@a3e7071a34d7e1f219a8a4de9a5e0a34d1ee1293
        with:
          script: |
            const fs = require('node:fs');
            const glob = require('glob')

            const packageJsonPaths = glob.sync('packages/**/package.json', { ignore: ['**/node_modules/**'] })
            const output = {
              packages: [],
            };

            for (const packageJsonPath of packageJsonPaths) {
              const contents = fs.readFileSync(packageJsonPath, 'utf8');
              const packageJson = JSON.parse(contents);
              if (packageJson.private) {
                continue;
              }

              const pkg = {
                name: packageJson.name,
                version: packageJson.version,
              };
              output.packages.push(pkg);
            }

            fs.writeFileSync('version.json', JSON.stringify(output, null, 2));
      - name: Upload version file
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: version
          path: version.json
