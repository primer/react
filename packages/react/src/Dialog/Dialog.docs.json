{
  "id": "dialog_v2",
  "docsId": "dialog",
  "name": "Dialog",
  "status": "draft",
  "a11yReviewed": false,
  "stories": [],
  "importPath": "@primer/react/experimental",
  "props": [
    {
      "name": "title",
      "type": "React.ReactNode",
      "description": "Title of the Dialog. Also serves as the aria-label for this Dialog."
    },
    {
      "name": "subtitle",
      "type": "React.ReactNode",
      "description": "The Dialog's subtitle. Optional. Rendered below the title in smaller type with less contrast. Also serves as the aria-describedby for this Dialog."
    },
    {
      "name": "renderHeader",
      "type": "React.FunctionComponent<React.PropsWithChildren<DialogHeaderProps>>",
      "description": "Provide a custom renderer for the dialog header. This content is rendered directly into the dialog body area, full bleed from edge to edge, top to the start of the body element. Warning: using a custom renderer may violate Primer UX principles."
    },
    {
      "name": "renderBody",
      "type": "React.FunctionComponent<React.PropsWithChildren<DialogProps>>",
      "description": "Provide a custom render function for the dialog body. This content is rendered directly into the dialog body area, full bleed from edge to edge, header to footer. Warning: using a custom renderer may violate Primer UX principles."
    },
    {
      "name": "renderFooter",
      "type": "React.FunctionComponent<React.PropsWithChildren<DialogProps>>",
      "description": "Provide a custom render function for the dialog footer. This content is rendered directly into the dialog footer area, full bleed from edge to edge, end of the body element to bottom. Warning: using a custom renderer may violate Primer UX principles."
    },
    {
      "name": "footerButtons",
      "type": "DialogButtonProps[]",
      "description": "Specifies the buttons to be rendered in the Dialog footer."
    },
    {
      "name": "onClose",
      "type": "(gesture: 'close-button' | 'escape') => void",
      "description": "This method is invoked when a gesture to close the dialog is used (either an Escape key press or clicking the 'X' in the top-right corner). The gesture argument indicates the gesture that was used to close the dialog (either 'close-button' or 'escape')."
    },
    {
      "name": "role",
      "type": "'dialog' | 'alertdialog'",
      "description": "The ARIA role to assign to this dialog."
    },
    {
      "name": "width",
      "type": "'small' | 'medium' | 'large' | 'xlarge'"
    },
    {
      "name": "height",
      "type": "'small' | 'large' | 'auto'"
    },
    {
      "name": "returnFocusRef",
      "type": "React.RefObject<HTMLElement>",
      "describedby": "Return focus to this element when the Dialog closes, instead of the element that had focus immediately before the Dialog opened"
    },
    {
      "name": "initialFocusRef",
      "type": "React.RefObject<HTMLElement>",
      "description": "Focus this element when the Dialog opens"
    }
  ],
  "subcomponents": []
}
