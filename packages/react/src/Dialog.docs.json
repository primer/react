{
  "id": "dialog",
  "docsId": "dialog",
  "name": "Dialog",
  "status": "alpha",
  "a11yReviewed": false,
  "stories": [],
  "importPath": "@primer/react",
  "props": [
    {
      "name": "isOpen",
      "type": "boolean",
      "description": "Whether or not the dialog is open"
    },
    {
      "name": "onDismiss",
      "type": "() => void",
      "description": "Function that will be called when the dialog is closed"
    },
    {
      "name": "returnFocusRef",
      "type": " React.RefObject<HTMLElement>",
      "description": "The element to restore focus back to after the `Dialog` is closed"
    },
    {
      "name": "initialFocusRef",
      "type": " React.RefObject<HTMLElement>",
      "description": "Element inside of the `Dialog` you'd like to be focused when the Dialog is opened. If nothing is passed to `initialFocusRef` the close button is focused."
    },
    {
      "name": "aria-labelledby",
      "type": "string",
      "description": "Pass an id to use for the aria-label. Use either a `aria-label` or an `aria-labelledby` but not both."
    },
    {
      "name": "aria-label",
      "type": "string",
      "description": "Pass a label to be used to describe the Dialog. Use either a `aria-label` or an `aria-labelledby` but not both."
    },
    {
      "name": "sx",
      "type": "SystemStyleObject"
    }
  ],
  "subcomponents": [
    {
      "name": "Dialog.Header",
      "props": [
        {
          "name": "sx",
          "type": "SystemStyleObject"
        }
      ]
    }
  ]
}
