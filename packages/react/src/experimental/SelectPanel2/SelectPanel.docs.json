{
  "id": "select_panel_v2",
  "docsId": "select_panel",
  "name": "SelectPanel",
  "status": "draft",
  "a11yReviewed": false,
  "stories": [
    {"id": "drafts-components-selectpanel-examples--minimal"},
    {"id": "drafts-components-selectpanel-examples--short-select-panel"},
    {"id": "drafts-components-selectpanel-features--instant-selection-variant"},
    {"id": "drafts-components-selectpanel-features--with-warning"},
    {"id": "drafts-components-selectpanel-examples--open-from-menu"},
    {"id": "drafts-components-selectpanel-examples--with-groups"},
    {"id": "drafts-components-selectpanel-examples--async-search-with-use-transition"},
    {"id": "drafts-components-selectpanel-examples--async-with-suspended-list"},
    {"id": "drafts-components-selectpanel-examples--with-filter-buttons"}
  ],
  "importPath": "@primer/react/experimental",
  "props": [
    {
      "name": "title",
      "type": "string",
      "required": true,
      "description": "A descriptive title for the panel"
    },
    {
      "name": "description",
      "type": "string",
      "description": "When provided, a description is displayed below the title"
    },
    {
      "name": "variant",
      "type": "'anchored' | 'modal'",
      "defaultValue": "anchored"
    },
    {
      "name": "selectionVariant",
      "type": "'multiple' | 'single' | 'instant'",
      "defaultValue": "multiple"
    },
    {
      "name": "onSubmit",
      "type": "(event: React.FormEvent) => void",
      "description": "Function that will be called when the panel is closed"
    },
    {
      "name": "onCancel",
      "type": "() => void",
      "description": "Function that will be called when the selection is submitted"
    },
    {
      "name": "onClearSelection",
      "type": "() => void",
      "description": "Function that will be called when the clear selection is selection"
    },
    {
      "name": "anchorRef",
      "type": "React.RefObject<HTMLButtonElement>",
      "description": "Useful for defining an external anchor"
    },
    {
      "name": "open",
      "type": "boolean",
      "defaultValue": "false",
      "description": "If defined, will control the open/closed state of the panel."
    },
    {
      "name": "children",
      "type": "React.ReactNode[]",
      "description": "Recommended: `SelectPanel.Button`, `SelectPanel.Header`, `ActionList`, `SelectPanel.Loading`, `SelectPanel.Message`, `SelectPanel.Footer`"
    },
    {
      "name": "width",
      "type": "| 'small' | 'medium' | 'large' | 'xlarge' | 'xxlarge' | 'auto'",
      "defaultValue": "'medium'",
      "description": "Sets the width of the Dialog, pick from our set list of widths, or pass `auto` to automatically set the width based on the contents. `small` corresponds to `256px`, `medium` corresponds to `320px`, `large` corresponds to `480px`, `xlarge` corresponds to `640px`, `xxlarge` corresponds to `960px`."
    },
    {
      "name": "height",
      "type": "| 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge' | 'fit-content'",
      "defaultValue": "'large'",
      "description": "Sets the height of the `Dialog`, pick from our set list of heights, or pass `fit-content` to set the height based on the contents. `xsmall` corresponds to `192px`, `small` corresponds to `256px`, `medium` corresponds to `320px`, `large` corresponds to `432px`, `xlarge` corresponds to `600px`."
    }
  ],
  "subcomponents": [
    {
      "name": "SelectPanel.Button",
      "props": [
        {
          "name": "children",
          "type": "React.ReactElement",
          "required": true,
          "defaultValue": ""
        }
      ],
      "passthrough": {
        "element": "Button",
        "url": "/react/Button"
      }
    },
    {
      "name": "SelectPanel.Header",
      "props": [
        {
          "name": "children",
          "type": "React.ReactNode",
          "description": "Rendered before the list. Recommended: `SelectPanel.SearchInput`"
        }
      ]
    },
    {
      "name": "SelectPanel.SearchInput",
      "props": [
        {
          "name": "onChange",
          "type": "React.ChangeEventHandler<HTMLInputElement>",
          "description": "Callback when input text changes, use this for search/filter"
        },
        {
          "name": "loading",
          "type": "boolean",
          "description": "Useful for subtle loading states while fetching items asynchronously"
        }
      ],
      "passthrough": {
        "element": "TextInput",
        "url": "/react/TextInput"
      }
    },
    {
      "name": "SelectPanel.Footer",
      "props": [
        {
          "name": "children",
          "type": "React.ReactNode",
          "description": "Optional: `<SelectPanel.SecondaryButton>`"
        }
      ]
    },
    {
      "name": "SelectPanel.SecondaryAction",
      "props": [
        {
          "name": "variant",
          "type": "'button' | 'link' | 'checkbox'"
        }
      ]
    },
    {
      "name": "SelectPanel.Loading",
      "props": [
        {
          "name": "children",
          "type": "string"
        }
      ]
    },
    {
      "name": "SelectPanel.Message",
      "props": [
        {
          "name": "variant",
          "type": "'warning' | 'error' | 'empty'"
        },
        {
          "name": "size",
          "type": "'inline' | 'full'"
        },
        {
          "name": "title",
          "type": "string",
          "description": "`inline` variant does not accept `title`"
        },
        {
          "name": "children",
          "type": "React.ReactNode"
        }
      ]
    }
  ]
}
