{
  "id": "popover",
  "name": "Popover",
  "status": "alpha",
  "a11yReviewed": "2025-01-08",
  "stories": [
    {
      "id": "components-popover--default"
    }
  ],
  "importPath": "@primer/react",
  "props": [
    {
      "name": "as",
      "type": "string",
      "defaultValue": "div",
      "description": "Sets the underlying HTML tag for the component"
    },
    {
      "name": "caret",
      "type": "| 'top' | 'bottom' | 'left' | 'right' | 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right' | 'left-bottom' | 'left-top' | 'right-bottom' | 'right-top' ",
      "defaultValue": "'top'",
      "description": "Controls the position of the caret"
    },
    {
      "name": "open",
      "type": "boolean",
      "defaultValue": "false",
      "description": "Controls the visibility of the popover."
    },
    {
      "name": "relative",
      "type": "boolean",
      "defaultValue": "false",
      "description": "Set to true to render the popover using relative positioning."
    }
  ],
  "subcomponents": [
    {
      "name": "Popover.Content",
      "props": [
        {
          "name": "as",
          "type": "string",
          "defaultValue": "div",
          "description": "Sets the underlying HTML tag for the component"
        },
        {
          "name": "width",
          "type": "| 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge' | 'auto'",
          "defaultValue": "'small'",
          "description": "Sets the width of the popover content."
        },
        {
          "name": "height",
          "type": "| 'small' | 'medium' | 'large' | 'xlarge' | 'fit-content' | 'auto'",
          "defaultValue": "'fit-content'",
          "description": "Sets the height of the popover content."
        },
        {
          "name": "overflow",
          "type": "| 'auto' | 'hidden' | 'scroll' | 'visible'",
          "defaultValue": "'auto'",
          "description": "Sets the overflow behavior of the popover content."
        },
        {
          "name": "onClickOutside",
          "type": "(event: MouseEvent | TouchEvent) => void",
          "description": "Callback fired when a click is detected outside the popover content"
        },
        {
          "name": "ignoreClickRefs",
          "type": "React.RefObject<HTMLElement>[]",
          "description": "Refs to elements that should be ignored when detecting outside clicks"
        }
      ]
    }
  ]
}
