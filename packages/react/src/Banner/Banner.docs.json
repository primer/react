{
  "id": "banner",
  "name": "Banner",
  "status": "alpha",
  "a11yReviewed": "2025-01-08",
  "importPath": "@primer/react",
  "stories": [
    {
      "id": "components-banner--default"
    },
    {
      "id": "components-banner-features--critical"
    },
    {
      "id": "components-banner-features--info"
    },
    {
      "id": "components-banner-features--success"
    },
    {
      "id": "components-banner-features--upsell"
    },
    {
      "id": "components-banner-features--warning"
    },
    {
      "id": "components-banner-features--dismiss"
    },
    {
      "id": "components-banner-features--dismiss-with-actions"
    },
    {
      "id": "components-banner-features--with-hidden-title"
    },
    {
      "id": "components-banner-features--with-hidden-title-and-actions"
    },
    {
      "id": "components-banner-features--dismissible-with-hidden-title-and-actions"
    },
    {
      "id": "components-banner-features--dismissible-with-hidden-title-and-secondary-action"
    },
    {
      "id": "components-banner-features--with-actions"
    },
    {
      "id": "components-banner-features--custom-icon"
    },
    {
      "id": "components-banner-examples--with-announcement"
    }
  ],
  "props": [
    {
      "name": "aria-label",
      "type": "string",
      "description": "Provide an optional label to override the default name for the Banner landmark region"
    },
    {
      "name": "className",
      "type": "string",
      "description": "Provide an optional className to add to the outermost element rendered by the Banner"
    },
    {
      "name": "description",
      "type": "React.ReactNode",
      "description": "Provide an optional description for the Banner. This should provide supplemental information about the Banner"
    },
    {
      "name": "hideTitle",
      "type": "boolean",
      "description": "Whether to hide the title visually."
    },
    {
      "name": "icon",
      "type": "React.ReactNode",
      "description": "Provide a custom icon for the Banner. This is only available when `variant` is `info` or `upsell`"
    },
    {
      "name": "onDismiss",
      "type": "() => void",
      "description": "Optionally provide a handler to be called when the banner is dismissed. Providing this prop will show a dismiss button"
    },
    {
      "name": "primaryAction",
      "type": "React.ReactNode",
      "description": ""
    },
    {
      "name": "secondaryAction",
      "type": "React.ReactNode",
      "description": ""
    },
    {
      "name": "title",
      "type": "React.ReactNode",
      "description": "The title for the Banner. This will be used as the accessible name and is required unless `Banner.Title` is used as a child"
    },
    {
      "name": "variant",
      "type": "'critical' | 'info' | 'success' | 'upsell' | 'warning'",
      "description": "Specify the type of the Banner"
    },
    {
      "name": "layout",
      "type": "'default' | 'compact'",
      "description": "Specify the layout of the Banner. Compact layout will reduce the padding."
    },
    {
      "name": "actionsLayout",
      "type": "'default' | 'inline' | 'stacked'",
      "description": "Override the responsive layout of the action buttons. 'inline' layout will display the buttons inline with the title and description, while 'stacked' layout will always render the buttons in a new row."
    }
  ],
  "subcomponents": [
    {
      "name": "Banner.Title",
      "props": [
        {
          "name": "as",
          "type": "'h2' | 'h3' | 'h4' | 'h5' | 'h6'"
        }
      ]
    },
    {
      "name": "Banner.Description",
      "props": [
        {
          "name": "className",
          "type": "string",
          "description": "Class name(s) for custom styling.",
          "defaultValue": ""
        }
      ]
    },
    {
      "name": "Banner.PrimaryAction",
      "props": [],
      "passthrough": {
        "element": "Button",
        "url": "/react/Button"
      }
    },
    {
      "name": "Banner.SecondaryAction",
      "props": [],
      "passthrough": {
        "element": "Button",
        "url": "/react/Button"
      }
    }
  ]
}
