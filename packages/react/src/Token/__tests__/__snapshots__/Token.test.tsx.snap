// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Token components AvatarToken renders all sizes 1`] = `
.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 0;
  margin-right: 4px;
}

.c5 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c3 {
  display: inline-block;
  overflow: hidden;
  line-height: 1;
  vertical-align: middle;
  border-radius: 50%;
  box-shadow: 0 0 0 1px var(--avatar-borderColor,var(--color-avatar-border,rgba(31,35,40,0.15)));
  height: var(--avatar-size);
  width: var(--avatar-size);
  --avatar-size: 16px;
  width: 100%;
  height: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 16px;
  line-height: 16px;
  padding-left: 4px;
  padding-right: 4px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
  padding-left: 4px;
}

.c6 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 16px;
  width: 16px;
}

.c6:hover,
.c6:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c6:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c4 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c4:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.c2 {
  --spacing: calc(4px * 2);
  display: block;
  height: calc(16px - var(--spacing));
  width: calc(16px - var(--spacing));
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="small"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      <img
        alt=""
        className="c3"
        data-component="Avatar"
        height={16}
        size={16}
        src="https://avatars.githubusercontent.com/mperrotti"
        width={16}
      />
    </span>
  </div>
  <span
    className="c4"
  >
    token
  </span>
  <span
    className="c5"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c6"
    onClick={[Function]}
    size="small"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={12}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={12}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders all sizes 2`] = `
.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 0;
  margin-right: 4px;
}

.c5 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c3 {
  display: inline-block;
  overflow: hidden;
  line-height: 1;
  vertical-align: middle;
  border-radius: 50%;
  box-shadow: 0 0 0 1px var(--avatar-borderColor,var(--color-avatar-border,rgba(31,35,40,0.15)));
  height: var(--avatar-size);
  width: var(--avatar-size);
  --avatar-size: 20px;
  width: 100%;
  height: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
  padding-left: 4px;
}

.c6 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c6:hover,
.c6:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c6:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c4 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c4:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.c2 {
  --spacing: calc(4px * 2);
  display: block;
  height: calc(20px - var(--spacing));
  width: calc(20px - var(--spacing));
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      <img
        alt=""
        className="c3"
        data-component="Avatar"
        height={20}
        size={20}
        src="https://avatars.githubusercontent.com/mperrotti"
        width={20}
      />
    </span>
  </div>
  <span
    className="c4"
  >
    token
  </span>
  <span
    className="c5"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c6"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders all sizes 3`] = `
.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 0;
  margin-right: 8px;
}

.c5 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c3 {
  display: inline-block;
  overflow: hidden;
  line-height: 1;
  vertical-align: middle;
  border-radius: 50%;
  box-shadow: 0 0 0 1px var(--avatar-borderColor,var(--color-avatar-border,rgba(31,35,40,0.15)));
  height: var(--avatar-size);
  width: var(--avatar-size);
  --avatar-size: 24px;
  width: 100%;
  height: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 24px;
  line-height: 24px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
  padding-left: 4px;
}

.c6 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 8px;
  height: 24px;
  width: 24px;
}

.c6:hover,
.c6:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c6:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c4 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c4:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.c2 {
  --spacing: calc(4px * 2);
  display: block;
  height: calc(24px - var(--spacing));
  width: calc(24px - var(--spacing));
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="large"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      <img
        alt=""
        className="c3"
        data-component="Avatar"
        height={24}
        size={24}
        src="https://avatars.githubusercontent.com/mperrotti"
        width={24}
      />
    </span>
  </div>
  <span
    className="c4"
  >
    token
  </span>
  <span
    className="c5"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c6"
    onClick={[Function]}
    size="large"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={18}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={18}
    >
      <path
        d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders all sizes 4`] = `
.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 0;
  margin-right: 8px;
}

.c5 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c3 {
  display: inline-block;
  overflow: hidden;
  line-height: 1;
  vertical-align: middle;
  border-radius: 50%;
  box-shadow: 0 0 0 1px var(--avatar-borderColor,var(--color-avatar-border,rgba(31,35,40,0.15)));
  height: var(--avatar-size);
  width: var(--avatar-size);
  --avatar-size: 32px;
  width: 100%;
  height: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 14px;
  height: 32px;
  line-height: 32px;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 0;
  padding-bottom: 0;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
  padding-left: 4px;
}

.c6 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 8px;
  height: 32px;
  width: 32px;
}

.c6:hover,
.c6:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c6:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c4 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c4:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.c2 {
  --spacing: calc(4px * 2);
  display: block;
  height: calc(32px - var(--spacing));
  width: calc(32px - var(--spacing));
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="xlarge"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      <img
        alt=""
        className="c3"
        data-component="Avatar"
        height={32}
        size={32}
        src="https://avatars.githubusercontent.com/mperrotti"
        width={32}
      />
    </span>
  </div>
  <span
    className="c4"
  >
    token
  </span>
  <span
    className="c5"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c6"
    onClick={[Function]}
    size="xlarge"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={24}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 24 24"
      width={24}
    >
      <path
        d="M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L13.06 12l5.22 5.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L12 13.06l-5.22 5.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders isSelected 1`] = `
.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 0;
  margin-right: 4px;
}

.c3 {
  display: inline-block;
  overflow: hidden;
  line-height: 1;
  vertical-align: middle;
  border-radius: 50%;
  box-shadow: 0 0 0 1px var(--avatar-borderColor,var(--color-avatar-border,rgba(31,35,40,0.15)));
  height: var(--avatar-size);
  width: var(--avatar-size);
  --avatar-size: 20px;
  width: 100%;
  height: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--fgColor-default,var(--color-fg-default,#1F2328));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-default,var(--color-fg-default,#1F2328));
  max-width: 100%;
  padding-left: 4px;
}

.c4 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c4:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.c2 {
  --spacing: calc(4px * 2);
  display: block;
  height: calc(20px - var(--spacing));
  width: calc(20px - var(--spacing));
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      <img
        alt=""
        className="c3"
        data-component="Avatar"
        height={20}
        size={20}
        src="https://avatars.githubusercontent.com/mperrotti"
        width={20}
      />
    </span>
  </div>
  <span
    className="c4"
  >
    token
  </span>
</span>
`;

exports[`Token components AvatarToken renders with a remove button 1`] = `
.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 0;
  margin-right: 4px;
}

.c5 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c3 {
  display: inline-block;
  overflow: hidden;
  line-height: 1;
  vertical-align: middle;
  border-radius: 50%;
  box-shadow: 0 0 0 1px var(--avatar-borderColor,var(--color-avatar-border,rgba(31,35,40,0.15)));
  height: var(--avatar-size);
  width: var(--avatar-size);
  --avatar-size: 20px;
  width: 100%;
  height: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
  padding-left: 4px;
}

.c6 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c6:hover,
.c6:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c6:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c4 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c4:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.c2 {
  --spacing: calc(4px * 2);
  display: block;
  height: calc(20px - var(--spacing));
  width: calc(20px - var(--spacing));
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <div
    className="c1"
  >
    <span
      className="c2"
    >
      <img
        alt=""
        className="c3"
        data-component="Avatar"
        height={20}
        size={20}
        src="https://avatars.githubusercontent.com/mperrotti"
        width={20}
      />
    </span>
  </div>
  <span
    className="c4"
  >
    token
  </span>
  <span
    className="c5"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c6"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 16px;
  line-height: 16px;
  padding-left: 4px;
  padding-right: 4px;
  --label-r: 153;
  --label-g: 153;
  --label-b: 153;
  --label-h: 0;
  --label-s: 0;
  --label-l: 60;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  padding-right: 0;
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: rgb(var(--label-r),var(--label-g),var(--label-b));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c2 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 16px;
  width: 16px;
}

.c2:hover,
.c2:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c2:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="small"
>
  <span
    className="c1"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c2"
    onClick={[Function]}
    size="small"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={12}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={12}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 2`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  --label-r: 153;
  --label-g: 153;
  --label-b: 153;
  --label-h: 0;
  --label-s: 0;
  --label-l: 60;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  padding-right: 0;
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: rgb(var(--label-r),var(--label-g),var(--label-b));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c2 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c2:hover,
.c2:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c2:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c2"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 3`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 24px;
  line-height: 24px;
  padding-left: 8px;
  padding-right: 8px;
  --label-r: 153;
  --label-g: 153;
  --label-b: 153;
  --label-h: 0;
  --label-s: 0;
  --label-l: 60;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  padding-right: 0;
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: rgb(var(--label-r),var(--label-g),var(--label-b));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c2 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 8px;
  height: 24px;
  width: 24px;
}

.c2:hover,
.c2:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c2:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="large"
>
  <span
    className="c1"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c2"
    onClick={[Function]}
    size="large"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={18}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={18}
    >
      <path
        d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 4`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 14px;
  height: 32px;
  line-height: 32px;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 0;
  padding-bottom: 0;
  --label-r: 153;
  --label-g: 153;
  --label-b: 153;
  --label-h: 0;
  --label-s: 0;
  --label-l: 60;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  padding-right: 0;
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: rgb(var(--label-r),var(--label-g),var(--label-b));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c2 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 8px;
  height: 32px;
  width: 32px;
}

.c2:hover,
.c2:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c2:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="xlarge"
>
  <span
    className="c1"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c2"
    onClick={[Function]}
    size="xlarge"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={24}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 24 24"
      width={24}
    >
      <path
        d="M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L13.06 12l5.22 5.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L12 13.06l-5.22 5.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders custom fill color 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  --label-r: 3;
  --label-g: 102;
  --label-b: 214;
  --label-h: 212;
  --label-s: 97;
  --label-l: 43;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  padding-right: 0;
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: rgb(var(--label-r),var(--label-g),var(--label-b));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c2 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c2:hover,
.c2:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c2:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c2"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders default fill color 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  --label-r: 153;
  --label-g: 153;
  --label-b: 153;
  --label-h: 0;
  --label-s: 0;
  --label-l: 60;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  padding-right: 0;
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: rgb(var(--label-r),var(--label-g),var(--label-b));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c2 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c2:hover,
.c2:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c2:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c2"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders isSelected 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  --label-r: 153;
  --label-g: 153;
  --label-b: 153;
  --label-h: 0;
  --label-s: 0;
  --label-l: 60;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: hsl(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 5) * 1%));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c0:focus {
  outline: none;
}

.c0:after {
  content: "";
  position: absolute;
  z-index: 1;
  top: -2px;
  right: -2px;
  bottom: -2px;
  left: -2px;
  display: block;
  pointer-events: none;
  box-shadow: 0 0 0 2px rgb(var(--label-r),var(--label-g),var(--label-b));
  border-radius: 999px;
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
</span>
`;

exports[`Token components IssueLabelToken renders with a remove button 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  --label-r: 153;
  --label-g: 153;
  --label-b: 153;
  --label-h: 0;
  --label-s: 0;
  --label-l: 60;
  --perceived-lightness: calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255);
  --lightness-switch: max(0,min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000),1));
  padding-right: 0;
  position: relative;
  --lightness-threshold: 0.453;
  --border-threshold: 0.96;
  --border-alpha: max(0,min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100),1));
  background: rgb(var(--label-r),var(--label-g),var(--label-b));
  color: hsl(0,0%,calc(var(--lightness-switch) * 100%));
  border-width: 1px;
  border-style: solid;
  border-color: hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha));
}

.c2 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c2:hover,
.c2:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c2:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c2"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 1`] = `
.c2 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 16px;
  line-height: 16px;
  padding-left: 4px;
  padding-right: 4px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
}

.c3 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 16px;
  width: 16px;
}

.c3:hover,
.c3:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c3:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="small"
>
  <span
    className="c1"
  >
    token
  </span>
  <span
    className="c2"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c3"
    onClick={[Function]}
    size="small"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={12}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={12}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 2`] = `
.c2 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
}

.c3 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c3:hover,
.c3:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c3:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
  <span
    className="c2"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c3"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 3`] = `
.c2 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 24px;
  line-height: 24px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
}

.c3 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 8px;
  height: 24px;
  width: 24px;
}

.c3:hover,
.c3:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c3:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="large"
>
  <span
    className="c1"
  >
    token
  </span>
  <span
    className="c2"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c3"
    onClick={[Function]}
    size="large"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={18}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={18}
    >
      <path
        d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 4`] = `
.c2 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 14px;
  height: 32px;
  line-height: 32px;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 0;
  padding-bottom: 0;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
}

.c3 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 8px;
  height: 32px;
  width: 32px;
}

.c3:hover,
.c3:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c3:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="xlarge"
>
  <span
    className="c1"
  >
    token
  </span>
  <span
    className="c2"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c3"
    onClick={[Function]}
    size="xlarge"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={24}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 24 24"
      width={24}
    >
      <path
        d="M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L13.06 12l5.22 5.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L12 13.06l-5.22 5.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders isSelected 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--fgColor-default,var(--color-fg-default,#1F2328));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-default,var(--color-fg-default,#1F2328));
  max-width: 100%;
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
</span>
`;

exports[`Token components Token renders with a leadingVisual 1`] = `
.c1 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  line-height: 0;
  margin-right: 4px;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
}

.c2 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c2:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c2:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <div
    className="c1"
  >
    <div
      style={
        {
          "backgroundColor": "blue",
        }
      }
    />
  </div>
  <span
    className="c2"
  >
    token
  </span>
</span>
`;

exports[`Token components Token renders with a remove button 1`] = `
.c2 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border-width: 0;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 999px;
  cursor: auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  position: relative;
  white-space: nowrap;
  font-size: 12px;
  height: 20px;
  line-height: 20px;
  padding-left: 8px;
  padding-right: 8px;
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
  border-color: var(--borderColor-muted,var(--color-border-subtle,rgba(31,35,40,0.15)));
  border-style: solid;
  border-width: 1px;
  color: var(--fgColor-muted,var(--color-fg-muted,#656d76));
  max-width: 100%;
  padding-right: 0;
}

.c3 {
  background-color: transparent;
  font-family: inherit;
  color: currentColor;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0;
  -webkit-transform: translate(1px,-1px);
  -ms-transform: translate(1px,-1px);
  transform: translate(1px,-1px);
  -webkit-align-self: baseline;
  -ms-flex-item-align: baseline;
  align-self: baseline;
  border: 0;
  border-radius: 999px;
  margin-left: 4px;
  height: 20px;
  width: 20px;
}

.c3:hover,
.c3:focus {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));
}

.c3:active {
  background-color: var(--bgColor-neutral-muted,var(--color-neutral-subtle,rgba(234,238,242,0.5)));
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background: transparent;
  border: none;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  width: auto;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  line-height: normal;
  color: currentColor;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1:is(a,button,[tabIndex='0']) {
  cursor: pointer;
}

.c1:is(a,button,[tabIndex='0']):after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

<span
  className="c0"
  onKeyDown={[Function]}
  size="medium"
>
  <span
    className="c1"
  >
    token
  </span>
  <span
    className="c2"
  >
     (press backspace or delete to remove)
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="c3"
    onClick={[Function]}
    size="medium"
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      fill="currentColor"
      focusable="false"
      height={15}
      style={
        {
          "display": "inline-block",
          "overflow": "visible",
          "userSelect": "none",
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;
