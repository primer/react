// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Token components AvatarToken renders all sizes 1`] = `
<span
  className="TokenBase Token Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="small"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <div
    className="LeadingVisualContainer"
  >
    <span
      className="AvatarContainer"
      data-size="small"
    >
      <img
        alt=""
        className="Avatar Avatar"
        data-component="Avatar"
        height={16}
        src="https://avatars.githubusercontent.com/mperrotti"
        style={
          {
            "--avatarSize-regular": "16px",
          }
        }
        width={16}
      />
    </span>
  </div>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="small"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={12}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={12}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders all sizes 2`] = `
<span
  className="TokenBase Token Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <div
    className="LeadingVisualContainer"
  >
    <span
      className="AvatarContainer"
      data-size="medium"
    >
      <img
        alt=""
        className="Avatar Avatar"
        data-component="Avatar"
        height={20}
        src="https://avatars.githubusercontent.com/mperrotti"
        style={
          {
            "--avatarSize-regular": "20px",
          }
        }
        width={20}
      />
    </span>
  </div>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders all sizes 3`] = `
<span
  className="TokenBase Token Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="large"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <div
    className="LeadingVisualContainer LargeLeadingVisual"
  >
    <span
      className="AvatarContainer"
      data-size="large"
    >
      <img
        alt=""
        className="Avatar Avatar"
        data-component="Avatar"
        height={24}
        src="https://avatars.githubusercontent.com/mperrotti"
        style={
          {
            "--avatarSize-regular": "24px",
          }
        }
        width={24}
      />
    </span>
  </div>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="large"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={18}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={18}
    >
      <path
        d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders all sizes 4`] = `
<span
  className="TokenBase Token Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="xlarge"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <div
    className="LeadingVisualContainer LargeLeadingVisual"
  >
    <span
      className="AvatarContainer"
      data-size="xlarge"
    >
      <img
        alt=""
        className="Avatar Avatar"
        data-component="Avatar"
        height={32}
        src="https://avatars.githubusercontent.com/mperrotti"
        style={
          {
            "--avatarSize-regular": "32px",
          }
        }
        width={32}
      />
    </span>
  </div>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="xlarge"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={24}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 24 24"
      width={24}
    >
      <path
        d="M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L13.06 12l5.22 5.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L12 13.06l-5.22 5.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components AvatarToken renders isSelected 1`] = `
<span
  className="TokenBase Token Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={false}
  data-is-selected={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <div
    className="LeadingVisualContainer"
  >
    <span
      className="AvatarContainer"
      data-size="medium"
    >
      <img
        alt=""
        className="Avatar Avatar"
        data-component="Avatar"
        height={20}
        src="https://avatars.githubusercontent.com/mperrotti"
        style={
          {
            "--avatarSize-regular": "20px",
          }
        }
        width={20}
      />
    </span>
  </div>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
</span>
`;

exports[`Token components AvatarToken renders with a remove button 1`] = `
<span
  className="TokenBase Token Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <div
    className="LeadingVisualContainer"
  >
    <span
      className="AvatarContainer"
      data-size="medium"
    >
      <img
        alt=""
        className="Avatar Avatar"
        data-component="Avatar"
        height={20}
        src="https://avatars.githubusercontent.com/mperrotti"
        style={
          {
            "--avatarSize-regular": "20px",
          }
        }
        width={20}
      />
    </span>
  </div>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 1`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={true}
  data-size="small"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "153",
      "--label-g": "153",
      "--label-h": "0",
      "--label-l": "60",
      "--label-r": "153",
      "--label-s": "0",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      "background": "rgb(var(--label-r), var(--label-g), var(--label-b))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": 0,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton RemoveButton"
    data-has-multiple-action-targets={false}
    data-size="small"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={12}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={12}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 2`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "153",
      "--label-g": "153",
      "--label-h": "0",
      "--label-l": "60",
      "--label-r": "153",
      "--label-s": "0",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      "background": "rgb(var(--label-r), var(--label-g), var(--label-b))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": 0,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton RemoveButton"
    data-has-multiple-action-targets={false}
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 3`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={true}
  data-size="large"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "153",
      "--label-g": "153",
      "--label-h": "0",
      "--label-l": "60",
      "--label-r": "153",
      "--label-s": "0",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      "background": "rgb(var(--label-r), var(--label-g), var(--label-b))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": 0,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton RemoveButton"
    data-has-multiple-action-targets={false}
    data-size="large"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={18}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={18}
    >
      <path
        d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders all sizes 4`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={true}
  data-size="xlarge"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "153",
      "--label-g": "153",
      "--label-h": "0",
      "--label-l": "60",
      "--label-r": "153",
      "--label-s": "0",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      "background": "rgb(var(--label-r), var(--label-g), var(--label-b))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": 0,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton RemoveButton"
    data-has-multiple-action-targets={false}
    data-size="xlarge"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={24}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 24 24"
      width={24}
    >
      <path
        d="M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L13.06 12l5.22 5.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L12 13.06l-5.22 5.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders custom fill color 1`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "214",
      "--label-g": "102",
      "--label-h": "212",
      "--label-l": "43",
      "--label-r": "3",
      "--label-s": "97",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      "background": "rgb(var(--label-r), var(--label-g), var(--label-b))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": 0,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton RemoveButton"
    data-has-multiple-action-targets={false}
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders default fill color 1`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "153",
      "--label-g": "153",
      "--label-h": "0",
      "--label-l": "60",
      "--label-r": "153",
      "--label-s": "0",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      "background": "rgb(var(--label-r), var(--label-g), var(--label-b))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": 0,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton RemoveButton"
    data-has-multiple-action-targets={false}
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components IssueLabelToken renders isSelected 1`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={false}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "153",
      "--label-g": "153",
      "--label-h": "0",
      "--label-l": "60",
      "--label-r": "153",
      "--label-s": "0",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      ":after": {
        "borderRadius": "999px",
        "bottom": "-2px",
        "boxShadow": "0 0 0 2px rgb(var(--label-r), var(--label-g), var(--label-b))",
        "content": """",
        "display": "block",
        "left": "-2px",
        "pointerEvents": "none",
        "position": "absolute",
        "right": "-2px",
        "top": "-2px",
        "zIndex": 1,
      },
      ":focus": {
        "outline": "none",
      },
      "background": "hsl(var(--label-h), calc(var(--label-s) * 1%), calc((var(--label-l) - 5) * 1%))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": undefined,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
</span>
`;

exports[`Token components IssueLabelToken renders with a remove button 1`] = `
<span
  className="TokenBase IssueLabel"
  data-cursor-is-interactive={false}
  data-has-remove-button={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "--border-alpha": "max(0, min(calc((var(--perceived-lightness) - var(--border-threshold)) * 100), 1))",
      "--border-threshold": "0.96",
      "--label-b": "153",
      "--label-g": "153",
      "--label-h": "0",
      "--label-l": "60",
      "--label-r": "153",
      "--label-s": "0",
      "--lightness-switch": "max(0, min(calc((var(--perceived-lightness) - var(--lightness-threshold)) * -1000), 1))",
      "--lightness-threshold": "0.453",
      "--perceived-lightness": "calc(((var(--label-r) * 0.2126) + (var(--label-g) * 0.7152) + (var(--label-b) * 0.0722)) / 255)",
      "background": "rgb(var(--label-r), var(--label-g), var(--label-b))",
      "borderColor": "hsla(var(--label-h),calc(var(--label-s) * 1%),calc((var(--label-l) - 25) * 1%),var(--border-alpha))",
      "borderStyle": "solid",
      "borderWidth": 1,
      "color": "hsl(0, 0%, calc(var(--lightness-switch) * 100%))",
      "paddingRight": 0,
      "position": "relative",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton RemoveButton"
    data-has-multiple-action-targets={false}
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 1`] = `
<span
  className="TokenBase Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="small"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="small"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={12}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={12}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 2`] = `
<span
  className="TokenBase Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 3`] = `
<span
  className="TokenBase Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="large"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="large"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={18}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 16 16"
      width={18}
    >
      <path
        d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders all sizes 4`] = `
<span
  className="TokenBase Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="xlarge"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="xlarge"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={24}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 24 24"
      width={24}
    >
      <path
        d="M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L13.06 12l5.22 5.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L12 13.06l-5.22 5.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;

exports[`Token components Token renders isSelected 1`] = `
<span
  className="TokenBase Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={false}
  data-is-selected={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
</span>
`;

exports[`Token components Token renders with a leadingVisual 1`] = `
<span
  className="TokenBase Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={false}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <div
    className="LeadingVisualContainer"
  >
    <div
      style={
        {
          "backgroundColor": "blue",
        }
      }
    />
  </div>
  <span
    className="TokenTextContainer"
  >
    token
  </span>
</span>
`;

exports[`Token components Token renders with a remove button 1`] = `
<span
  className="TokenBase Token"
  data-cursor-is-interactive={false}
  data-is-remove-btn={true}
  data-size="medium"
  onKeyDown={[Function]}
  style={
    {
      "borderWidth": "1px",
    }
  }
  text="token"
>
  <span
    className="TokenTextContainer"
  >
    token
    <span
      className="InternalVisuallyHidden"
    >
       (press backspace or delete to remove)
    </span>
  </span>
  <button
    aria-hidden="false"
    aria-label="Remove token"
    className="TokenButton"
    data-size="medium"
    onClick={[Function]}
    style={
      {
        "transform": "translate(1px, -1px)",
      }
    }
  >
    <svg
      aria-hidden="true"
      className="octicon octicon-x"
      display="inline-block"
      fill="currentColor"
      focusable="false"
      height={15}
      overflow="visible"
      style={
        {
          "verticalAlign": "text-bottom",
        }
      }
      viewBox="0 0 12 12"
      width={15}
    >
      <path
        d="M2.22 2.22a.749.749 0 0 1 1.06 0L6 4.939 8.72 2.22a.749.749 0 1 1 1.06 1.06L7.061 6 9.78 8.72a.749.749 0 1 1-1.06 1.06L6 7.061 3.28 9.78a.749.749 0 1 1-1.06-1.06L4.939 6 2.22 3.28a.749.749 0 0 1 0-1.06Z"
      />
    </svg>
  </button>
</span>
`;
