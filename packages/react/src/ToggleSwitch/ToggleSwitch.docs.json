{
  "id": "toggle_switch",
  "name": "ToggleSwitch",
  "status": "alpha",
  "a11yReviewed": "2025-01-08",
  "stories": [
    {
      "id": "components-toggleswitch--default"
    },
    {
      "id": "components-toggleswitch-features--small"
    },
    {
      "id": "components-toggleswitch-features--with-caption"
    },
    {
      "id": "components-toggleswitch-features--disabled"
    },
    {
      "id": "components-toggleswitch-features--checked"
    },
    {
      "id": "components-toggleswitch-features--checked-disabled"
    },
    {
      "id": "components-toggleswitch-features--loading"
    },
    {
      "id": "components-toggleswitch-features--label-end"
    },
    {
      "id": "components-toggleswitch-features--controlled"
    },
    {
      "id": "components-toggleswitch-features--with-custom-labels"
    }
  ],
  "importPath": "@primer/react",
  "props": [
    {
      "name": "aria-describedby",
      "type": "string",
      "defaultValue": "",
      "description": "The id of the DOM node that describes the switch"
    },
    {
      "name": "aria-labelledby",
      "type": "string",
      "defaultValue": "",
      "required": true,
      "description": "The id of the DOM node that labels the switch"
    },
    {
      "name": "defaultChecked",
      "type": "boolean",
      "defaultValue": "",
      "description": "Uncontrolled - whether the switch is turned on"
    },
    {
      "name": "disabled",
      "type": "boolean",
      "defaultValue": "",
      "description": "Whether the switch is ready for user input"
    },
    {
      "name": "loading",
      "type": "boolean",
      "defaultValue": "",
      "description": "Whether the switch's value is being calculated"
    },
    {
      "name": "checked",
      "type": "boolean",
      "defaultValue": "",
      "description": "Whether the switch is turned on"
    },
    {
      "name": "onChange",
      "type": "(on: boolean) => void",
      "defaultValue": "",
      "description": "The callback that is called when the switch is toggled on or off"
    },
    {
      "name": "onClick",
      "type": "(e: MouseEvent) => void",
      "defaultValue": "",
      "description": "The callback that is called when the switch is clicked"
    },
    {
      "name": "size",
      "type": "'small' | 'medium'",
      "defaultValue": "'medium'",
      "description": "Size of the switch"
    },
    {
      "name": "statusLabelPosition",
      "type": "'start' | 'end'",
      "defaultValue": "'start'",
      "description": "Whether the \"on\" and \"off\" labels should appear before or after the switch.\n\n**This should only be changed when the switch's alignment needs to be adjusted.** For example: It needs to be left-aligned because the label appears above it and the caption appears below it."
    },
    {
      "name": "loadingLabelDelay",
      "type": "number",
      "defaultValue": "2000",
      "description": "When the switch is in the loading state, this value controls the amount of delay in milliseconds before the word \"Loading\" is announced to screen readers."
    },
    {
      "name": "loadingLabel",
      "type": "string",
      "defaultValue": "'Loading'",
      "description": "The text that is announced to AT such as screen readers when the switch is in a loading state."
    },
    {
      "name": "buttonType",
      "type": "'button' | 'submit' | 'reset'",
      "defaultValue": "'button'",
      "description": "As itâ€™s part of form behavior, this controls whether the button is of type `button`, `submit`, or `reset`."
    },
    {
      "name": "buttonLabelOn",
      "type": "string",
      "defaultValue": "'On'",
      "description": "The text to display when the toggle switch is turned on. Only customize this label if there is a more specific label for the context. For example, you might use 'Show' if the setting is 'Show images'."
    },
    {
      "name": "buttonLabelOff",
      "type": "string",
      "defaultValue": "'Off'",
      "description": "The text to display when the toggle switch is turned off. Only customize this label if there is a more specific label for the context. For example, you might use 'Hide' if the setting is 'Show images'."
    }
  ],
  "subcomponents": []
}
